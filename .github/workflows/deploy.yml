name: Deploy AppliHub

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # ----------------------
      # 1) Checkout code
      # ----------------------
      - name: Checkout code
        uses: actions/checkout@v3

      # ----------------------
      # 2) Build Frontend
      # ----------------------
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22

      - name: Install JS dependencies & build frontend
        working-directory: ./frontend
        run: |
          npm ci
          npm run build

      # ----------------------
      # 3) Clean old frontend files
      # ----------------------
      - name: Clean old frontend files
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            rm -rf /home/${{ secrets.SERVER_USER }}/${{ secrets.FRONTEND_FOLDER }}/*

      # ----------------------
      # 4) Upload frontend build to domain root
      # ----------------------
      - name: Upload frontend build via SCP
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          source: "./frontend/dist/*"
          target: "/home/${{ secrets.SERVER_USER }}/${{ secrets.FRONTEND_FOLDER }}/"

      # ----------------------
      # 5) Deploy Laravel API
      # ----------------------
      - name: Deploy API via SSH
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            cd /home/${{ secrets.SERVER_USER }}/${{ secrets.BACKEND_FOLDER }}
            git reset --hard
            git pull origin main
            cd api
            composer install --no-dev --optimize-autoloader
            php artisan migrate --force
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache
            php artisan storage:link || true